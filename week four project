library(dplyr)
library(ggplot2)
library(lubridate)
library(caret)
library(randomForest)
library(rpart)
library(rpart.plot)
library(corrplot)

#Data Loading
  TeData<- read.csv("pml-testing.csv", na.strings = c("NA", "#DIV/0!", ""))
  TrainingData<- read.csv("pml-training.csv", na.strings = c("NA", "#DIV/0!", ""))
#Data Transforamation
  TrainingData$cvtd_timestamp<- as.Date(TrainingData$cvtd_timestamp, format = "%m/%d/%Y %H:%M")
  TrainingData$Day<-factor(weekdays(TrainingData$cvtd_timestamp)) #Add day variable
#Data Cleaning
  #### Remove columns with NA missing values
    TrainingData <- TrainingData[, colSums(is.na(TrainingData)) == 0]
    TeData <- TeData[, colSums(is.na(TeData)) == 0] 
  #### Remove columns that are not relevant to accelerometer measurements.
    classe<- TrainingData$classe
    TrRemove<- grepl("^X|timestamp|window", names(TrainingData))
    TrainingData<- TrainingData[, !TrRemove]
    TrClean<- TrainingData[, sapply(TrainingData, is.numeric)]
    TrClean$classe<- classe
    TeRemove<- grepl("^X|timestamp|window", names(TeData))
    TeData<- TeData[, !TeRemove]
    TeClean<- TeData[, sapply(TeData, is.numeric)]
#Create Train and Test data sets
  set.seed(22519)
  inTrain <- createDataPartition(TrClean$classe, p=0.70, list=F)
  FintrainData <- TrClean[inTrain, ]
  FintestData <- TrClean[-inTrain, ]
#Data Modelling
  controlRf <- trainControl(method="cv", 5)
  rfmod<- train(classe ~., data=FintrainData, method="rf", trControl=controlRf, importance=TRUE, ntree=100)
  rfmod
#Accuacy of the model on Validation data set
  predictRfmod<- predict(rfmod, FintestData)
  confusionMatrix(FintestData$classe, predictRfmod)
  accuracy <- postResample(predictRfmod, FintestData$classe)
  accuracy
  Error <- 1 - as.numeric(confusionMatrix(FintestData$classe, predictRfmod)$overall[1])
  Error
  result <- predict(rfmod, TeClean[, -length(names(TeClean))])
  result


